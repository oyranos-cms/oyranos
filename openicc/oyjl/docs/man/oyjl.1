.TH "oyjl" 1 "November 12, 2017" "User Commands"
.SH NAME
oyjl v1.0.0 \- Oyjl Json Manipulation
.SH SYNOPSIS
\fBoyjl\fR \fBjson\fR [\fB\-i\fR \fIFILENAME\fR ...] [\fB\-x\fR \fIPATH\fR] [\fB\-s\fR \fISTRING\fR] [\fB\-r\fR \fIFORMAT\fR] [\fB\-p\fR] [\fB\-d\fR\fI[=SEPARATOR]\fR] [\fB\-w\fR \fITYPE\fR] [\fB\-W\fR \fINAME\fR]
.br
\fBoyjl\fR \fByaml\fR [\fB\-i\fR \fIFILENAME\fR ...] [\fB\-x\fR \fIPATH\fR] [\fB\-s\fR \fISTRING\fR] [\fB\-r\fR \fIFORMAT\fR] [\fB\-p\fR] [\fB\-d\fR\fI[=SEPARATOR]\fR] [\fB\-w\fR \fITYPE\fR] [\fB\-W\fR \fINAME\fR]
.br
\fBoyjl\fR \fBxml\fR [\fB\-i\fR \fIFILENAME\fR ...] [\fB\-x\fR \fIPATH\fR] [\fB\-s\fR \fISTRING\fR] [\fB\-r\fR \fIFORMAT\fR] [\fB\-p\fR] [\fB\-d\fR\fI[=SEPARATOR]\fR] [\fB\-w\fR \fITYPE\fR] [\fB\-W\fR \fINAME\fR]
.br
\fBoyjl\fR \fBcsv\fR [\fB\-i\fR \fIFILENAME\fR ...] [\fB\-x\fR \fIPATH\fR] [\fB\-s\fR \fISTRING\fR] [\fB\-r\fR \fIFORMAT\fR] [\fB\-p\fR] [\fB\-d\fR\fI[=SEPARATOR]\fR] [\fB\-w\fR \fITYPE\fR] [\fB\-W\fR \fINAME\fR]
.br
\fBoyjl\fR \fBcsv-semicolon\fR [\fB\-i\fR \fIFILENAME\fR ...] [\fB\-x\fR \fIPATH\fR] [\fB\-s\fR \fISTRING\fR] [\fB\-r\fR \fIFORMAT\fR] [\fB\-p\fR] [\fB\-d\fR\fI[=SEPARATOR]\fR] [\fB\-w\fR \fITYPE\fR] [\fB\-W\fR \fINAME\fR]
.br
\fBoyjl\fR \fBcount\fR [\fB\-i\fR \fIFILENAME\fR ...] [\fB\-x\fR \fIPATH\fR] [\fB\-r\fR \fIFORMAT\fR]
.br
\fBoyjl\fR \fBkey\fR [\fB\-i\fR \fIFILENAME\fR ...] [\fB\-x\fR \fIPATH\fR] [\fB\-r\fR \fIFORMAT\fR]
.br
\fBoyjl\fR \fBtype\fR [\fB\-i\fR \fIFILENAME\fR ...] [\fB\-x\fR \fIPATH\fR] [\fB\-r\fR \fIFORMAT\fR]
.br
\fBoyjl\fR \fBpaths\fR [\fB\-i\fR \fIFILENAME\fR ...] [\fB\-x\fR \fIPATH\fR] [\fB\-r\fR \fIFORMAT\fR]
.br
\fBoyjl\fR \fBformat\fR [\fB\-i\fR \fIFILENAME\fR ...] [\fB\-x\fR \fIPATH\fR] [\fB\-r\fR \fIFORMAT\fR]
.br
\fBoyjl\fR \fB\-h\fR\fI[=synopsis|...]\fR | \fB\-X\fR \fIjson|json+command|man|markdown\fR | \fB\-V\fR [\fB\-v\fR]
.SH DESCRIPTION
The oyjl program can be used to parse, filter sub trees, select values and modify values in JSON, YAML, XML and CSV. It converts between data formats.
.SH OPTIONS
.SS
Set input file and path
.br
\fB\-i\fR|\fB\-\-input\fR \fIFILENAME\fR ...	File or Stream
.RS
A JSON file name or a input stream like "stdin".
.RE
\fB\-x\fR|\fB\-\-xpath\fR \fIPATH\fR	Path specifier
.RS
The path consists of slash '/' separated terms. Each term can be a key name or a square bracketed index. A empty term is used for a search inside a tree.
.RE
\fB\-s\fR|\fB\-\-set\fR \fISTRING\fR	Set a key from "xpath" option to a value
.RS
Use "oyjl-remove" to remove the key.
.RE
\fB\-p\fR|\fB\-\-plain\fR	No Markup
.br
\fB\-r\fR|\fB\-\-try-format\fR \fIFORMAT\fR	Try to find data format, even with offset.
.br
	\fB\-r\fR JSON		# JSON
.br
	\fB\-r\fR XML		# XML
.br
	\fB\-r\fR CSV		# CSV
.br
	\fB\-r\fR CSV-semicolon		# CSV-semicolon
.br
\fB\-d\fR|\fB\-\-detect-numbers\fR\fI[=SEPARATOR]\fR	Try to detect numbers from non typesafe formats.
.RS
Uses by default dot '.' as decimal separator.
.RE
	\fB\-d\fR ,		# Comma : Decimal Separator
.br
	\fB\-d\fR .		# Dot : Decimal Separator
.br
\fB\-w\fR|\fB\-\-wrap\fR \fITYPE\fR	language specific wrap
.br
	\fB\-w\fR C		# C static char
.br
\fB\-W\fR|\fB\-\-wrap-name\fR \fINAME\fR	A name for the symbol to be defined.
.RS
Use only letters from alphabet [A-Z,a-z] including optional underscore '_'.
.RE
	\fB\-W\fR wrap		# wrap
.br
.SS
Print JSON to stdout
\fBoyjl\fR \fBjson\fR [\fB\-i\fR \fIFILENAME\fR ...] [\fB\-x\fR \fIPATH\fR] [\fB\-s\fR \fISTRING\fR] [\fB\-r\fR \fIFORMAT\fR] [\fB\-p\fR] [\fB\-d\fR\fI[=SEPARATOR]\fR] [\fB\-w\fR \fITYPE\fR] [\fB\-W\fR \fINAME\fR]
.br
JSON - JavaScript Object Notation
.br
.sp
.br
\fBjson\fR	Print JSON to stdout
.br
.SS
Print YAML to stdout
\fBoyjl\fR \fByaml\fR [\fB\-i\fR \fIFILENAME\fR ...] [\fB\-x\fR \fIPATH\fR] [\fB\-s\fR \fISTRING\fR] [\fB\-r\fR \fIFORMAT\fR] [\fB\-p\fR] [\fB\-d\fR\fI[=SEPARATOR]\fR] [\fB\-w\fR \fITYPE\fR] [\fB\-W\fR \fINAME\fR]
.br
YAML - Yet Another Markup Language
.br
.sp
.br
\fByaml\fR	Print YAML to stdout
.br
.SS
Print XML to stdout
\fBoyjl\fR \fBxml\fR [\fB\-i\fR \fIFILENAME\fR ...] [\fB\-x\fR \fIPATH\fR] [\fB\-s\fR \fISTRING\fR] [\fB\-r\fR \fIFORMAT\fR] [\fB\-p\fR] [\fB\-d\fR\fI[=SEPARATOR]\fR] [\fB\-w\fR \fITYPE\fR] [\fB\-W\fR \fINAME\fR]
.br
XML - eXtended Markup Language
.br
.sp
.br
\fBxml\fR	Print XML to stdout
.br
.SS
Print CSV to stdout
\fBoyjl\fR \fBcsv\fR [\fB\-i\fR \fIFILENAME\fR ...] [\fB\-x\fR \fIPATH\fR] [\fB\-s\fR \fISTRING\fR] [\fB\-r\fR \fIFORMAT\fR] [\fB\-p\fR] [\fB\-d\fR\fI[=SEPARATOR]\fR] [\fB\-w\fR \fITYPE\fR] [\fB\-W\fR \fINAME\fR]
.br
CSV - Comma Separated Values
.br
.sp
.br
\fBcsv\fR	Print CSV to stdout
.br
.SS
Print CSV-semicolon to stdout
\fBoyjl\fR \fBcsv-semicolon\fR [\fB\-i\fR \fIFILENAME\fR ...] [\fB\-x\fR \fIPATH\fR] [\fB\-s\fR \fISTRING\fR] [\fB\-r\fR \fIFORMAT\fR] [\fB\-p\fR] [\fB\-d\fR\fI[=SEPARATOR]\fR] [\fB\-w\fR \fITYPE\fR] [\fB\-W\fR \fINAME\fR]
.br
CSV - Comma Separated Values
.br
.sp
.br
\fBcsv-semicolon\fR	Print CSV with semicolon to stdout
.br
.SS
Print node count
\fBoyjl\fR \fBcount\fR [\fB\-i\fR \fIFILENAME\fR ...] [\fB\-x\fR \fIPATH\fR] [\fB\-r\fR \fIFORMAT\fR]
.br
\fBcount\fR	Print count of leafs in node
.br
.SS
Print key name
\fBoyjl\fR \fBkey\fR [\fB\-i\fR \fIFILENAME\fR ...] [\fB\-x\fR \fIPATH\fR] [\fB\-r\fR \fIFORMAT\fR]
.br
\fBkey\fR	Print key name of node
.br
.SS
Print type
\fBoyjl\fR \fBtype\fR [\fB\-i\fR \fIFILENAME\fR ...] [\fB\-x\fR \fIPATH\fR] [\fB\-r\fR \fIFORMAT\fR]
.br
\fBtype\fR	Get node type
.br
.SS
Print all matching paths.
\fBoyjl\fR \fBpaths\fR [\fB\-i\fR \fIFILENAME\fR ...] [\fB\-x\fR \fIPATH\fR] [\fB\-r\fR \fIFORMAT\fR]
.br
\fBpaths\fR	Print all matching paths
.br
.SS
Print Data Format.
\fBoyjl\fR \fBformat\fR [\fB\-i\fR \fIFILENAME\fR ...] [\fB\-x\fR \fIPATH\fR] [\fB\-r\fR \fIFORMAT\fR]
.br
\fBformat\fR	Print Data Format
.br
.SS
General options
\fBoyjl\fR \fB\-h\fR\fI[=synopsis|...]\fR | \fB\-X\fR \fIjson|json+command|man|markdown\fR | \fB\-V\fR [\fB\-v\fR]
.br
\fB\-h\fR|\fB\-\-help\fR\fI[=synopsis|...]\fR	Print help text
.RS
Show usage information and hints for the tool.
.RE
	\fB\-h\fR 1		# Full Help : Print help for all groups
.br
	\fB\-h\fR synopsis		# Synopsis : List groups - Show all groups including syntax
.br
	\fB\-h\fR Input		# Set input file and path
.br
	\fB\-h\fR Print JSON		# Print JSON to stdout : JSON - JavaScript Object Notation
.br
	\fB\-h\fR Print YAML		# Print YAML to stdout : YAML - Yet Another Markup Language
.br
	\fB\-h\fR Print XML		# Print XML to stdout : XML - eXtended Markup Language
.br
	\fB\-h\fR Print CSV		# Print CSV to stdout : CSV - Comma Separated Values
.br
	\fB\-h\fR Print CSV-semicolon		# Print CSV-semicolon to stdout : CSV - Comma Separated Values
.br
	\fB\-h\fR Count		# Print node count
.br
	\fB\-h\fR Key Name		# Print key name
.br
	\fB\-h\fR Type		# Print type
.br
	\fB\-h\fR Paths		# Print all matching paths.
.br
	\fB\-h\fR Format		# Print Data Format.
.br
	\fB\-h\fR Misc		# General options
.br
\fB\-X\fR|\fB\-\-export\fR \fIjson|json+command|man|markdown\fR	Export formated text
.RS
Get UI converted into text formats
.RE
	\fB\-X\fR man		# Man : Unix Man page - Get a unix man page
.br
	\fB\-X\fR markdown		# Markdown : Formated text - Get formated text
.br
	\fB\-X\fR json		# Json : GUI - Get a Oyjl Json UI declaration
.br
	\fB\-X\fR json+command		# Json + Command : GUI + Command - Get Oyjl Json UI declaration incuding command
.br
	\fB\-X\fR export		# Export : All available data - Get UI data for developers. The format can be converted by the oyjl-args tool.
.br
\fB\-V\fR|\fB\-\-version\fR	Version
.br
\fB\-v\fR|\fB\-\-verbose\fR	increase verbosity
.br
.SH EXAMPLES
.TP
Print JSON to stdout
.br
oyjl -i text.json -x ///[0]
.TP
Print count of leafs in node
.br
oyjl -c -i text.json -x my/path/
.TP
Print key name of node
.br
oyjl -k -i text.json -x ///[0]
.TP
Print all matching paths
.br
oyjl -p -i text.json -x //
.TP
Set a key name to a value
.br
oyjl -i text.json -x my/path/to/key -s value
.SH SEE ALSO
.TP
oyjl-args(1) oyjl-translate(1) oyjl-args-qml(1)
.br
https://codedocs.xyz/oyranos-cms/oyranos/group__oyjl.html
.SH AUTHOR
Kai-Uwe Behrmann http://www.oyranos.org
.SH COPYRIGHT
Copyright Â© 2017-2022 Kai-Uwe Behrmann
.br
License: newBSD http://www.oyranos.org
.SH BUGS
https://www.gitlab.com/oyranos/oyranos/issues 

