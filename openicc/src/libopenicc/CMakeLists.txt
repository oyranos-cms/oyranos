# if our static code lands inside a shared lib, we need -fPIC
IF(ENABLE_SHARED_LIBS_${PROJECT_UP_NAME})
  SET( CMAKE_POSITION_INDEPENDENT_CODE ON)
ENDIF()

SET( CFILES_OBJECT_CONFIG_PUBLIC
	${CMAKE_CURRENT_SOURCE_DIR}/aglob.c
	${CMAKE_CURRENT_SOURCE_DIR}/openicc_config.c
	${CMAKE_CURRENT_SOURCE_DIR}/openicc_core.c
	${CMAKE_CURRENT_SOURCE_DIR}/openicc_db.c
	${CMAKE_CURRENT_SOURCE_DIR}/openicc_io.c
	${CMAKE_CURRENT_SOURCE_DIR}/openicc_string.c
	${CMAKE_CURRENT_SOURCE_DIR}/xdg_bds.c
   )
SET( CFILES_OBJECT_CONFIG_PUBLIC ${CFILES_OBJECT_CONFIG_PUBLIC} PARENT_SCOPE )
SET( CFILES_OBJECT_CONFIG
	${CFILES_OBJECT_CONFIG_PUBLIC}
   )

IF(NOT HAVE_GLOB)
  SET( CFILES_OBJECT_CONFIG
       ${CFILES_OBJECT_CONFIG}
       ${CMAKE_CURRENT_SOURCE_DIR}/glob.c
     )
  IF( HAVE_ISSETUGID )
    SET_SOURCE_FILES_PROPERTIES( glob.c PROPERTIES COMPILE_DEFINITIONS "HAVE_ISSETUGID=1" )
  ENDIF( HAVE_ISSETUGID )
  IF( HAVE_GETAUXVAL )
    SET_SOURCE_FILES_PROPERTIES( glob.c PROPERTIES COMPILE_DEFINITIONS "HAVE_GETAUXVAL=1" )
  ENDIF( HAVE_GETAUXVAL )
  IF( HAVE_LOCALE_H)
    SET_SOURCE_FILES_PROPERTIES( glob.c PROPERTIES COMPILE_DEFINITIONS "HAVE_LOCALE_H=1" )
  ENDIF( HAVE_LOCALE_H )
ENDIF( NOT HAVE_GLOB ) 

CONFIGURE_FILE (
		"${CMAKE_CURRENT_SOURCE_DIR}/openicc_conf.h.in"
		"${CMAKE_BINARY_DIR}/src/include/openicc_conf.h"
		@ONLY
	)

SET( SOURCES ${CFILES_OBJECT_CONFIG} )

SET( EXTRA_LIBS ${EXTRA_LIBS} ${YAJL_LIBRARIES} )


IF(APPLE)
   INCLUDE_DIRECTORIES ( /Developer/Headers/FlatCarbon )
   FIND_LIBRARY( CARBON_LIBRARY Carbon )
   FIND_LIBRARY( IOKIT_LIBRARY IOKit )
   MARK_AS_ADVANCED( CARBON_LIBRARY )
   MARK_AS_ADVANCED( IOKIT_LIBRARY )
   SET(EXTRA_LIBS_CS ${CARBON_LIBRARY} ${IOKIT_LIBRARY})
ENDIF (APPLE)

IF(ENABLE_SHARED_LIBS_${PROJECT_UP_NAME})
  ADD_LIBRARY( OpenICC SHARED ${SOURCES} )
  TARGET_LINK_LIBRARIES (
   OpenICC
   ${EXTRA_LIBS} ${EXTRA_LIBS_CS} )

  IF( ENABLE_INSTALL_${PROJECT_UP_NAME} )
    INSTALL( TARGETS OpenICC
           RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
           LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
           ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} )
  ENDIF( ENABLE_INSTALL_${PROJECT_UP_NAME} )
ENDIF(ENABLE_SHARED_LIBS_${PROJECT_UP_NAME})

IF(ENABLE_STATIC_LIBS_${PROJECT_UP_NAME})
   ADD_LIBRARY( openicc-static STATIC ${SOURCES} )
   TARGET_LINK_LIBRARIES (
   openicc-static
   ${EXTRA_LIBS} ${EXTRA_LIBS_CS} )

  IF( ENABLE_INSTALL_${PROJECT_UP_NAME} )
   INSTALL( TARGETS openicc-static
            RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
            LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
            ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} )
  ENDIF( ENABLE_INSTALL_${PROJECT_UP_NAME} )
ENDIF()
