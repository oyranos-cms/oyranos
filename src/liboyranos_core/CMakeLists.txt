IF(NOT HAVE_DIRENT_H)
  SET( DIRENT_C dirent.c )
ENDIF(NOT HAVE_DIRENT_H)

SET( CHEADERS_CORE_PUBLIC ${CHEADERS_CORE_PUBLIC} PARENT_SCOPE )
SET( CHEADERS_CORE_PUBLIC
	../include/${PACKAGE_NAME}_core.h
	../include/${PACKAGE_NAME}_definitions.h
	../include/${PACKAGE_NAME}_types.h
        "${CMAKE_BINARY_DIR}/src/include/oyranos_version.h"
   )
SET( CHEADERS_CORE
	${CHEADERS_CORE_PUBLIC}
   )

SET( CFILES_CORE_PUBLIC
	${CMAKE_CURRENT_SOURCE_DIR}/${PACKAGE_NAME}_core.c
	${CMAKE_CURRENT_SOURCE_DIR}/${PACKAGE_NAME}_debug.c
	${CMAKE_CURRENT_SOURCE_DIR}/${PACKAGE_NAME}_i18n.c
   )
SET( CFILES_CORE_PUBLIC ${CFILES_CORE_PUBLIC} PARENT_SCOPE )
SET( CFILES_CORE
	${CFILES_CORE_PUBLIC}
	${CMAKE_CURRENT_SOURCE_DIR}/${PACKAGE_NAME}_helper.c
	${CMAKE_CURRENT_SOURCE_DIR}/${PACKAGE_NAME}_io_core.c
	${CMAKE_CURRENT_SOURCE_DIR}/${PACKAGE_NAME}_misc.c
	${CMAKE_CURRENT_SOURCE_DIR}/${PACKAGE_NAME}_sentinel_core.c
	${CMAKE_CURRENT_SOURCE_DIR}/${PACKAGE_NAME}_string.c
	${CMAKE_CURRENT_SOURCE_DIR}/${DIRENT_C}
	${CMAKE_CURRENT_SOURCE_DIR}/md5.c
	${CMAKE_CURRENT_SOURCE_DIR}/lookup3.c
   )

SET( SOURCES ${CFILES_CORE} ${CHEADERS_CORE} )
MESSAGE( "-- EXTRA_LIBS_CORE:          ${EXTRA_LIBS_CORE}" )

SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS_CORE}" )
SET( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS_CORE}" )

FIND_PACKAGE(Git)

IF(GIT_EXECUTABLE)
  EXECUTE_PROCESS(
    COMMAND "${GIT_EXECUTABLE}" describe --always HEAD
    WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}"
    RESULT_VARIABLE res
    OUTPUT_VARIABLE OY_GIT_VERSION
    ERROR_QUIET
    OUTPUT_STRIP_TRAILING_WHITESPACE )
ENDIF()

SET_PROPERTY(GLOBAL APPEND
    PROPERTY CMAKE_CONFIGURE_DEPENDS
    "${CMAKE_SOURCE_DIR}/.git/index")

IF("${OY_GIT_VERSION}" MATCHES "^.*-(.*)-g.*$")
    MESSAGE( "-- OY_GIT_VERSION:           " ${OY_GIT_VERSION} )
ENDIF()

CONFIGURE_FILE (
		"${CMAKE_CURRENT_SOURCE_DIR}/oyranos_git_version.h.in"
		"${CMAKE_SOURCE_DIR}/src/include_private/oyranos_git_version.h"
		@ONLY
	)

IF(ENABLE_SHARED_LIBS_${PROJECT_UP_NAME})
  ADD_LIBRARY( ${PROJECT_NAME}Core SHARED ${SOURCES} )
  TARGET_LINK_LIBRARIES ( ${PROJECT_NAME}Core ${EXTRA_LIBS_CORE} )

  # OS X Framework
  SET_TARGET_PROPERTIES( ${PROJECT_NAME}Core PROPERTIES
  FRAMEWORK TRUE
  FRAMEWORK_VERSION ${OYRANOS_VERSION}
  PRIVATE_HEADER ""
  PUBLIC_HEADER "${CHEADERS_CORE_PUBLIC}"
  RESOURCE ""
#  INSTALL_NAME_DIR "@executable_path/../../../../${FRAMEWORK_DIR}"
#  DEBUG_POSTFIX -d
  )

  INSTALL( TARGETS ${PROJECT_NAME}Core
         RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
         FRAMEWORK DESTINATION ${FRAMEWORK_DIR}
         LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
         ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
	 PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${TARGET_INCLUDE_FOLDER}
         RESOURCE DESTINATION ${FRAMEWORK_DIR}
         )
ENDIF(ENABLE_SHARED_LIBS_${PROJECT_UP_NAME})

IF(ENABLE_STATIC_LIBS_${PROJECT_UP_NAME})
  ADD_LIBRARY( oyranos_core-static STATIC ${SOURCES})
  SET( SOURCES_STATIC ${SOURCES_STATIC} ${SOURCES} PARENT_SCOPE )
  TARGET_LINK_LIBRARIES ( oyranos_core-static ${EXTRA_LIBS_CORE} )

  INSTALL( TARGETS oyranos_core-static
          RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
          FRAMEWORK DESTINATION ${FRAMEWORK_DIR}
          LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
          ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
	  PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${TARGET_INCLUDE_FOLDER}
          RESOURCE DESTINATION ${FRAMEWORK_DIR}
        )
  IF(NOT ENABLE_SHARED_LIBS_${PROJECT_UP_NAME})
    INSTALL( FILES ${CHEADERS_CORE_PUBLIC}
             DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${TARGET_INCLUDE_FOLDER} )
  ENDIF(NOT ENABLE_SHARED_LIBS_${PROJECT_UP_NAME})
ENDIF(ENABLE_STATIC_LIBS_${PROJECT_UP_NAME})

IF( USE_GETTEXT )
  MESSAGE( "-- OY_LINGUAS: ${OY_LINGUAS}" )
  IF(APPLE)
    FOREACH( oy_lang ${OY_LINGUAS} )
      INSTALL( FILES "${CMAKE_BINARY_DIR}/src/${oy_lang}.gmo"
               DESTINATION "${CMAKE_INSTALL_PREFIX}/${FRAMEWORK_DIR}/${PROJECT_NAME}Core.framework/Resources/locale/${oy_lang}/LC_MESSAGES"
               RENAME oyranos.mo )
    ENDFOREACH( oy_lang )
  ENDIF(APPLE)
ENDIF( USE_GETTEXT )
